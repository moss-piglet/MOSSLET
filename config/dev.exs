import Config

# Configure your database
config :mosslet, Mosslet.Repo.Local,
  username: "postgres",
  password: "postgres",
  hostname: "localhost",
  database: "Mosslet_dev",
  stacktrace: true,
  show_sensitive_data_on_connection_error: true,
  pool_size: 10

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we can use it
# to bundle .js and .css sources.
config :mosslet, MossletWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [ip: {127, 0, 0, 1}, port: 4000],
  check_origin: false,
  code_reloader: true,
  debug_errors: true,
  live_reload: [
    notify: [
      live_view: [
        ~r"lib/mosslet_web/core_components.ex$",
        ~r"lib/mosslet_web/(live|components)/.*(ex|heex)$"
      ]
    ],
    patterns: [
      ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
      ~r"priv/gettext/.*(po)$",
      ~r"lib/mosslet_web/(?:controllers|live|components|router)/?.*\.(ex|heex)$"
    ]
  ],
  secret_key_base: System.get_env("SECRET_KEY_BASE"),
  watchers: [
    esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
    tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}
  ]

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Configures the upload adapter for Trix uploads in dev
config :mosslet, :uploader, adapter: Mosslet.FileUploads.Tigris

# Configures exaws in dev
config :ex_aws,
  json_codec: Jason,
  access_key_id: [{:system, "AWS_ACCESS_KEY_ID"}],
  secret_access_key: [{:system, "AWS_SECRET_ACCESS_KEY"}],
  region: {:system, "AWS_REGION"}

config :ex_aws, :s3,
  scheme: "https",
  host: {:system, "AWS_HOST"}

config :ex_aws, :retries, max_attempts: 3

# Configure Stripe in Test mode
config :mosslet, :billing_products, [
  %{
    id: "prod_QGgvzwUKNoslru",
    name: "MOSSLET (Personal)",
    description:
      "Enjoy lifetime access with a one-time payment. MOSSLET (Personal) is designed for individuals who value peace of mind and privacy. Bring a friend and join today to share meaningful experiences in a safe and supportive environment.",
    most_popular: false,
    features: [
      "Unlimited Connections, Groups, and Posts",
      "Unlimited new features",
      "Streamlined settings",
      "Own your data",
      "Advanced asymmetric encryption",
      "Email support",
      "Supports Affirm Payment Plans"
    ],
    line_items: [
      %{
        id: "personal",
        interval: :one_time,
        price: "price_1RWO5tJhDwcSIdONr8n3SS1X",
        quantity: 1,
        amount: 5900,
        allow_promotion_codes: true
      }
    ],
    mode: "payment",
    automatic_tax: %{enabled: true}
  }
]

# Enable dev routes for dashboard and mailbox
config :mosslet,
  dev_routes: true

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :phoenix_live_view,
  debug_heex_annotations: true,
  debug_tags_location: true,
  debug_attributes: true,
  enable_expensive_runtime_checks: true

# Disable swoosh api client as it is only required for production adapters.
config :swoosh, :api_client, false

# Used in Util.email_valid?
# In dev mode we don't bother with MX record check - just the string format.
# In prod.ex MX checking is enabled
config :email_checker,
  default_dns: :system,
  also_dns: [],
  validations: [EmailChecker.Check.Format],
  smtp_retries: 2,
  timeout_milliseconds: :infinity

config :mosslet, MossletWeb.Plugs.ContentSecurityPolicy,
  csp:
    "default-src 'none'; form-action 'self'; script-src 'self' 'unsafe-eval' https://unpkg.com/@popperjs/core@2.11.8/dist/umd/popper.min.js https://unpkg.com/tippy.js@6.3.7/dist/tippy-bundle.umd.min.js https://unpkg.com/trix@2.1.13/dist/trix.umd.min.js https://cdn.usefathom.com/script.js; style-src 'self' 'unsafe-inline' https://unpkg.com/trix@2.1.13/dist/trix.css; img-src 'self' data: blob: https://cdn.usefathom.com/ https://mosslet-dev.fly.storage.tigris.dev/; font-src 'self' https://fonts.gstatic.com; connect-src 'self' wss://localhost:4000 http://localhost:4000; frame-ancestors 'self'; object-src 'self'; base-uri 'self'; frame-src 'self'; manifest-src 'self';"
