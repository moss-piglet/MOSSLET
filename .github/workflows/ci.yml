name: Elixir CI
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      AVATARS_BUCKET: ${{ secrets.AVATARS_BUCKET }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      BUMBLEBEE_OFFLINE: ${{ secrets.BUMBLEBEE_OFFLINE }}
      C_INCLUDE_PATH: ${{ secrets.C_INCLUDE_PATH }}
      CLOAK_KEY: ${{ secrets.CLOAK_KEY }}
      DNS_CLUSTER_QUERY: ${{ secrets.DNS_CLUSTER_QUERY }}
      FLY_REGION: ${{ secrets.FLY_REGION }}
      HMAC_SECRET: ${{ secrets.HMAC_SECRET }}
      LIBRARY_PATH: ${{ secrets.LIBRARY_PATH }}
      LIVE_VIEW_ENCRYPTION_SALT: ${{ secrets.LIVE_VIEW_ENCRYPTION_SALT }}
      LIVE_VIEW_SIGNING_SALT: ${{ secrets.LIVE_VIEW_SIGNING_SALT }}
      PKG_CONFIG_PATH: ${{ secrets.PKG_CONFIG_PATH }}
      PLUG_ATTACK_IP_SECRET: ${{ secrets.PLUG_ATTACK_IP_SECRET }}
      PRIMARY_REGION: ${{ secrets.PRIMARY_REGION }}
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      SERVER_PRIVATE_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
      SERVER_PUBLIC_KEY: ${{ secrets.SERVER_PUBLIC_KEY }}
      SESSION_ENCRYPTION_SALT: ${{ secrets.SESSION_ENCRYPTION_SALT }}
      SESSION_SIGNING_SALT: ${{ secrets.SESSION_SIGNING_SALT }}

    # Run PostgreSQL as a service
    services:
      postgres:
        image: postgres:15.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mosslet_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Setup Erlang and Elixir
      - name: Set up Erlang and Elixir
        uses: erlef/setup-beam@v1
        id: setup-beam
        with:
          version-file: .tool-versions
          version-type: strict

      # Install Rebar3
      - name: Install Rebar3
        run: |
          wget https://github.com/erlang/rebar3/releases/download/3.24.0/rebar3 
          chmod +x rebar3
          sudo mv rebar3 /usr/local/bin/rebar3
          rebar3 --version

      # Cache dependencies
      - name: Cache deps
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      # Install dependencies
      - name: Get dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.clean --all
          mix deps.get

      - name: Install libsodium
        run: |
          sudo apt-get update
          sudo apt-get install -y libsodium-dev

      # Compile dependencies
      - name: Compile dependencies
        run: mix deps.compile

      # Check formatting
      - name: Check Formatting
        run: mix format --check-formatted

      # Create database and run migrations
      - name: Create and migrate database
        env:
          MIX_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          mix ecto.create
          mix ecto.migrate

      # Run tests
      - name: Run tests
        env:
          MIX_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: mix test

      - name: Cache plt files
        uses: actions/cache@v4
        env:
          EX_OTP_VERSIONS: ${{ steps.setup-beam.outputs.elixir-version }}
          KEY_BASE: plt-${{ runner.os }}-${{ env.EX_OTP_VERSIONS }}
        with:
          path: |
            priv/plts
          key: |
            ${{ env.KEY_BASE }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ env.KEY_BASE }}-

      # Run dialyzer for type checking
      - name: Dialyzer static analysis
        run: mix dialyzer --format github

      # Clean outdated dependencies
      - name: Check unused dependencies
        run: mix deps.unlock --check-unused
