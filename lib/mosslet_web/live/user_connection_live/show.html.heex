<.layout current_page={:connections} current_user={@current_user} key={@key} type="sidebar">
  <main class={
    if get_banner_image_for_connection(@user_connection.connection) == "",
      do: "py-10",
      else: "pb-10"
  }>
    <%!-- Page header --%>
    <.user_connection_header
      current_user={@current_user}
      key={@key}
      user_connection={@user_connection}
      return_url={@return_url}
    />

    <div class="mx-auto mt-8 grid max-w-3xl grid-cols-1 gap-6 sm:px-6 lg:max-w-7xl lg:grid-flow-col-dense lg:grid-cols-3">
      <%!-- Profile --%>
      <div class="space-y-6 lg:col-span-1 lg:col-start-3">
        <section aria-labelledby="profile-title">
          <.user_connection_profile
            current_user={@current_user}
            key={@key}
            user_connection={@user_connection}
          />
        </section>

        <%!-- Groups --%>
        <section aria-labelledby="groups-title">
          <%!-- groups async result --%>
          <.async_result :let={_result} assign={@groups}>
            <:loading>
              <div class="loading">
                <div class="spinner"></div>
              </div>
            </:loading>
            <:failed :let={{:error, reason}}>
              <div class="failed">
                Whoops: {reason}
              </div>
            </:failed>
            <.user_connection_groups
              current_user={@current_user}
              groups={@streams.groups}
              key={@key}
            />
          </.async_result>
        </section>
      </div>

      <div class="space-y-6 lg:col-span-2 lg:col-start-1">
        <%!-- Posts --%>
        <section aria-labelledby="posts-title">
          <%!-- posts async result --%>
          <.async_result :let={_result} assign={@posts}>
            <:loading>
              <div class="loading">
                <div class="spinner"></div>
              </div>
            </:loading>
            <:failed :let={{:error, reason}}>
              <div class="failed">
                Whoops: {reason}
              </div>
            </:failed>
            <.user_connection_posts
              current_user={@current_user}
              post_form={@post_form}
              key={@key}
              posts={@streams.posts}
              options={@options}
              post_count={@post_count}
              user_connection={@user_connection}
              post_loading={@post_loading}
              post_loading_count={@post_loading_count}
              post_loading_list={@post_loading_list}
              finished_loading_post_list={@finished_loading_post_list}
              return_url={@return_url}
              image_urls={@image_urls}
              uploads_in_progress={@uploads_in_progress}
            />
          </.async_result>
        </section>
      </div>
    </div>
  </main>

  <.phx_modal
    :if={@live_action in [:edit]}
    id="edit-user-connection-modal"
    show
    class="shadow-md dark:shadow-emerald-500/50"
    on_cancel={JS.patch(@return_url)}
  >
    <.live_component
      module={MossletWeb.UserConnectionLive.FormComponent}
      id={@user_connection.id}
      title={@page_title}
      action={@live_action}
      uconn={@user_connection}
      user={@current_user}
      key={@key}
      patch={@return_url}
    />
  </.phx_modal>

  <.phx_modal
    :if={@live_action in [:post_edit] && can_edit?(@current_user, @post)}
    id="post-modal-edit"
    show
    class="shadow-md dark:shadow-emerald-500/50"
    on_cancel={JS.patch(@return_url)}
  >
    <.live_component
      module={MossletWeb.PostLive.FormComponent}
      id={"modal-live-component-edit-post-#{@post.id}"}
      title="Edit Post"
      action={:edit}
      post={@post}
      groups={[]}
      user={@current_user}
      shared_users={@post_shared_users}
      image_urls={@image_urls}
      uploads_in_progress={@uploads_in_progress}
      key={@key}
      patch={@return_url}
    />
  </.phx_modal>

  <.phx_modal
    :if={@live_action in [:reply, :reply_edit]}
    id="reply-modal"
    show
    class="shadow-md dark:shadow-emerald-500/50"
    on_cancel={JS.patch(@return_url)}
  >
    <.live_component
      module={MossletWeb.PostLive.Replies.FormComponent}
      id={@reply.id || :reply}
      title="Reply to Post"
      action={@live_action}
      post={@post}
      reply={@reply}
      groups={[]}
      user={@current_user}
      shared_users={@post_shared_users}
      key={@key}
      image_urls={@image_urls}
      uploads_in_progress={@uploads_in_progress}
      patch={@return_url}
    />
  </.phx_modal>
</.layout>
