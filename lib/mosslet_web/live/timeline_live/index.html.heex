<.layout current_page={:timeline} current_user={@current_user} key={@key} type="sidebar">
  <%!-- Fresh Timeline Mockup --%>

  <%!-- Main timeline container with improved visual flow --%>
  <div
    class="min-h-screen bg-gradient-to-br from-slate-50/30 via-transparent to-teal-50/20 dark:from-slate-900/30 dark:via-transparent dark:to-teal-900/10"
    phx-hook="ReplyComposer"
    id="timeline-container"
  >
    <%!-- Timeline header with better integration --%>
    <div class="relative px-4 sm:px-6 lg:px-8 pt-8 pb-6">
      <div class="mx-auto max-w-2xl text-center">
        <MossletWeb.DesignSystem.liquid_timeline_header
          user_name={user_name(@current_user, @key)}
          status="calm"
          status_message="Mindfully connected"
        />
      </div>
    </div>

    <%!-- Content container with improved spacing --%>
    <MossletWeb.DesignSystem.liquid_container max_width="lg" class="space-y-6">
      <%!-- Realtime update indicator (sticky at top when new posts arrive) --%>
      <MossletWeb.DesignSystem.liquid_timeline_realtime_indicator
        new_posts_count={Map.get(@unread_counts, String.to_atom(@active_tab || "home"), 0)}
        active_tab={@active_tab || "home"}
      />

      <%!-- Timeline navigation tabs with Bookmarks --%>
      <div class="bg-white/60 dark:bg-slate-800/60 backdrop-blur-md rounded-2xl border border-slate-200/40 dark:border-slate-700/40 shadow-lg shadow-slate-900/5 dark:shadow-slate-900/20 p-2">
        <MossletWeb.DesignSystem.liquid_timeline_tabs
          tabs={[
            %{
              key: "home",
              label: "Home",
              count: @timeline_counts.home || 12,
              unread: @unread_counts.home || 0
            },
            %{
              key: "connections",
              label: "Connections",
              count: @timeline_counts.connections || 4,
              unread: @unread_counts.connections || 0
            },
            %{
              key: "groups",
              label: "Groups",
              count: @timeline_counts.groups || 2,
              unread: @unread_counts.groups || 0
            },
            %{
              key: "bookmarks",
              label: "Bookmarks",
              count: @timeline_counts.bookmarks || 8,
              unread: @unread_counts.bookmarks || 0
            },
            %{
              key: "discover",
              label: "Discover",
              count: @timeline_counts.discover || 0,
              unread: @unread_counts.discover || 0
            }
          ]}
          active_tab={@active_tab || "home"}
        />
      </div>

      <%!-- Enhanced compose with better visual prominence --%>
      <div class="relative">
        <%!-- Subtle glow effect for composer --%>
        <div class="absolute inset-0 bg-gradient-to-r from-emerald-500/10 via-teal-500/5 to-emerald-500/10 rounded-2xl blur-xl">
        </div>
        <%!-- Real functional composer connected to backend --%>
        <.form
          for={@post_form}
          id="timeline-composer"
          phx-submit="save_post"
          phx-change="validate_post"
          phx-drop-target={@uploads.photos.ref}
          class="relative"
        >
          <MossletWeb.DesignSystem.liquid_timeline_composer_enhanced
            user_name={user_name(@current_user, @key) || "Private Author"}
            user_avatar={
              maybe_get_user_avatar(@current_user, @key) || "/images/logo_icon_dark.svg"
            }
            placeholder="Share something meaningful with your community..."
            character_limit={500}
            selector={@selector}
            form={@post_form}
            uploads={@uploads}
            class="relative"
            content_warning_enabled?={@content_warning_enabled?}
          />
        </.form>
      </div>

      <%!-- Timeline feed with improved visual hierarchy and auto-animations --%>
      <div class="space-y-3">
        <%!-- Real timeline posts from encrypted backend --%>
        <div id="timeline-posts" phx-update="stream" class="space-y-3">
          <div :for={{dom_id, post} <- @streams.posts} id={dom_id} class="timeline-post-container">
            <div id={"timeline-card-container-#{post.id}"} class="timeline-post-item new-post">
              <MossletWeb.DesignSystem.liquid_timeline_post
                user_name={get_post_author_name(post, @current_user, @key)}
                user_handle={"@" <> (case decr_item(post.username, @current_user, get_post_key(post, @current_user), @key, post, "username") do
                  result when is_binary(result) -> result
                  _ -> "author"
                end)}
                user_avatar={get_post_author_avatar(post, @current_user, @key)}
                timestamp={format_post_timestamp(post.inserted_at)}
                verified={false}
                content_warning?={post.content_warning?}
                content_warning={
                  if post.content_warning? do
                    case post.visibility do
                      :public ->
                        decr_item(
                          post.content_warning,
                          @current_user,
                          get_post_key(post),
                          @key,
                          post,
                          "body"
                        ) || "[Could not decrypt content]"

                      _ ->
                        decr_item(
                          post.content_warning,
                          @current_user,
                          get_post_key(post, @current_user),
                          @key,
                          post,
                          "body"
                        ) || "[Could not decrypt content]"
                    end
                  end
                }
                content_warning_category={
                  if post.content_warning? do
                    case post.visibility do
                      :public ->
                        decr_item(
                          post.content_warning_category,
                          @current_user,
                          get_post_key(post),
                          @key,
                          post,
                          "body"
                        ) || "[Could not decrypt content]"

                      _ ->
                        decr_item(
                          post.content_warning_category,
                          @current_user,
                          get_post_key(post, @current_user),
                          @key,
                          post,
                          "body"
                        ) || "[Could not decrypt content]"
                    end
                  end
                }
                content={
                  case post.visibility do
                    :public ->
                      decr_item(
                        post.body,
                        @current_user,
                        get_post_key(post),
                        @key,
                        post,
                        "body"
                      ) || "[Could not decrypt content]"

                    _ ->
                      decr_item(
                        post.body,
                        @current_user,
                        get_post_key(post, @current_user),
                        @key,
                        post,
                        "body"
                      ) || "[Could not decrypt content]"
                  end
                }
                images={get_decrypted_post_images(post, @current_user, @key)}
                post={post}
                current_user={@current_user}
                key={@key}
                stats={
                  %{
                    replies:
                      if(Ecto.assoc_loaded?(post.replies), do: length(post.replies), else: 0),
                    shares: post.reposts_count || 0,
                    likes: post.favs_count || 0
                  }
                }
                post_id={post.id}
                current_user_id={@current_user.id}
                post={post}
                current_user={@current_user}
                is_repost={post.repost || false}
                liked={@current_user.id in (post.favs_list || [])}
                bookmarked={get_post_bookmarked_status(post, @current_user)}
                unread?={get_post_unread_status(post, @current_user)}
                class="shadow-xl shadow-slate-900/8 dark:shadow-slate-900/25 hover:shadow-2xl hover:shadow-slate-900/12 dark:hover:shadow-slate-900/35"
              />
            </div>
          </div>
        </div>

        <%!-- Show gentle message when no posts available --%>
        <div class="hidden only:block text-center py-12">
          <div class="inline-flex flex-col items-center gap-4 px-8 py-6 rounded-2xl bg-gradient-to-br from-emerald-50/40 via-teal-50/30 to-cyan-50/40 dark:from-emerald-900/10 dark:via-teal-900/5 dark:to-cyan-900/10 border border-emerald-200/40 dark:border-emerald-700/30">
            <.phx_icon name="hero-sparkles" class="h-8 w-8 text-emerald-500" />
            <div class="text-center">
              <p class="text-sm font-medium text-emerald-700 dark:text-emerald-300 mb-1">
                Your timeline awaits
              </p>
              <p class="text-xs text-slate-600 dark:text-slate-400 max-w-xs">
                Share something meaningful or connect with others to see their posts here.
              </p>
            </div>
          </div>
        </div>

        <%!-- Enhanced load more button with dynamic remaining count and tab colors --%>
        <MossletWeb.DesignSystem.liquid_timeline_scroll_indicator
          remaining_count={
            calculate_remaining_posts(@timeline_counts, @active_tab, @loaded_posts_count)
          }
          load_count={@options.post_per_page}
          loading={@load_more_loading}
          tab_color={get_tab_color(@active_tab)}
          phx-click="load_more_posts"
        />
      </div>

      <%!-- Gentle end of feed message with enhanced calm messaging --%>
      <div class="text-center py-12">
        <div class="inline-flex flex-col items-center gap-4 px-8 py-6 rounded-2xl bg-gradient-to-br from-emerald-50/40 via-teal-50/30 to-cyan-50/40 dark:from-emerald-900/10 dark:via-teal-900/5 dark:to-cyan-900/10 border border-emerald-200/40 dark:border-emerald-700/30">
          <.phx_icon name="hero-heart" class="h-8 w-8 text-emerald-500" />
          <div class="text-center">
            <p class="text-sm font-medium text-emerald-700 dark:text-emerald-300 mb-1">
              You're all caught up!
            </p>
            <p class="text-xs text-slate-600 dark:text-slate-400 max-w-xs">
              Time to step away and enjoy the real world. Your community will be here when you return.
            </p>
          </div>
        </div>
      </div>
    </MossletWeb.DesignSystem.liquid_container>
  </div>
</.layout>
