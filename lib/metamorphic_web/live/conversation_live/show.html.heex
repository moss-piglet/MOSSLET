<.back class="mb-8" navigate={~p"/conversations"}>Back to conversations</.back>

<.header>
  <%= @conversation.name %>
  <:subtitle>
    <%= @conversation.model %> - Started <%= display_date(@conversation.inserted_at) %>
  </:subtitle>
  <:actions>
    <.link patch={~p"/conversations/#{@conversation}/show/edit"} phx-click={JS.push_focus()}>
      <.button>Edit</.button>
    </.link>
  </:actions>
</.header>

<ul id="messages" class="mt-4 divide-y divide-gray-200">
  <li
    :for={message <- @messages}
    id={"row-#{message.id}"}
    class={["flex justify-between gap-x-6 px-4 py-5", message_block_classes(message)]}
  >
    <div class="flex gap-x-4">
      <div class="shrink-0 w-16">
        <div class="text-center">
          <.icon name={role_icon(message.role)} class="mx-auto w-8 h-8 text-gray-400 block" />
          <p class="mt-1 text-xs text-gray-400 leading-none select-none">
            <%= display_date(message.updated_at) %>
          </p>
          <p class="mt-1 text-xs text-gray-400 leading-none select-none"><%= message.status %></p>
        </div>
      </div>
      <div class="min-w-0 flex-auto">
        <.markdown :if={message.role == "assistant"} text={message.content} />
        <span :if={message.role != "assistant"} class="whitespace-pre-wrap">
          <%= message.content %>
        </span>
      </div>
    </div>
    <div class="hidden sm:flex sm:flex-col sm:items-end">
      <div class="flex items-center space-x-2">
        <.link
          title="Edit"
          patch={~p"/conversations/#{@conversation}/edit_message/#{message.id}"}
          phx-click={JS.push_focus()}
        >
          <.icon name="hero-pencil" class={edited_color(message)} />
        </.link>
        <.link
          title="Delete"
          phx-click={JS.push("delete", value: %{id: message.id}) |> hide("#row-#{message.id}")}
          data-confirm="Are you sure you want to delete this message?"
        >
          <.icon name="hero-trash" class="text-red-900" />
        </.link>
      </div>
    </div>
  </li>
  <%= if @llm_chain.delta do %>
    <li
      id="row-delta"
      class={["flex justify-between gap-x-6 px-4 py-5", message_block_classes(@llm_chain.delta)]}
    >
      <div class="flex gap-x-4">
        <div class="shrink-0 w-16">
          <div class="text-center">
            <.icon
              name={role_icon(@llm_chain.delta.role)}
              class="mx-auto w-8 h-8 text-gray-400 block"
            />
          </div>
        </div>
        <div class="min-w-0 flex-auto">
          <.markdown :if={@llm_chain.delta.role == "assistant"} text={@llm_chain.delta.content} />
          <span :if={@llm_chain.delta.role != "assistant"} class="whitespace-pre-wrap">
            <%= @llm_chain.delta.content %>
          </span>
        </div>
      </div>
      <div class="hidden sm:flex sm:flex-col sm:items-end">
        <div class="flex items-center space-x-2">
          <%= if @async_result.loading do %>
            <.button phx-click="cancel">Cancel</.button>
          <% end %>
        </div>
      </div>
    </li>
  <% end %>
</ul>

<div class="my-4 text-center">
  <.button :if={!@async_result.loading} phx-click="resubmit">Resubmit</.button>
  <.button :if={@async_result.loading} phx-click="cancel">Cancel</.button>
</div>

<div>
  <.simple_form for={@form} id="new-message-form" phx-change="validate" phx-submit="save">
    <.input
      field={@form[:content]}
      id="new-message-content"
      type="textarea"
      rows={8}
      label="Send Message"
      phx-hook="CtrlEnterSubmits"
      phx-debounce="500"
    />
    <:actions>
      <.button phx-disable-with="Submiting...">Submit</.button>
    </:actions>
  </.simple_form>
</div>

<.back class="mt-16" navigate={~p"/ai/conversations"}>Back to conversations</.back>

<.modal
  :if={@live_action == :edit}
  id="conversation-modal"
  show
  on_cancel={JS.patch(~p"/ai/conversations/#{@conversation}")}
>
  <.live_component
    module={LangchainDemoWeb.ConversationLive.FormComponent}
    id={@conversation.id}
    title={@page_title}
    action={@live_action}
    conversation={@conversation}
    patch={~p"/ai/conversations/#{@conversation}"}
  />
</.modal>

<.modal
  :if={@live_action == :edit_message}
  id="message-modal"
  show
  on_cancel={JS.patch(~p"/ai/conversations/#{@conversation}")}
  on_click_away={:none}
>
  <.live_component
    module={LangchainDemoWeb.ConversationLive.MessageFormComponent}
    id={"msg-modal-#{@message.id}"}
    title={@page_title}
    action={@live_action}
    conversation={@conversation}
    message={@message}
    patch={~p"/ai/conversations/#{@conversation}"}
  />
</.modal>
